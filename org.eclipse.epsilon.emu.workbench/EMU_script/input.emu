//10) Filter Condition Change: inPattern_filter_replacement
@action replace
@feature filter
pattern mutation_operator_10
instance:InPattern
//fiter only for operatorCallExp
guard: instance.filter.isTypeOf(OperatorCallExp)
{
	do {
		// applicable only for operatorCallExp
		var new_filter = OperatorCallExp.createInstance();
		var operators = Sequence{">",">=","<","<=","=", "<>"};
		var old_opr = instance.filter.operationName;
		var selected = operators.random();
		while(selected = old_opr)
		{
			selected = operators.random();
		}
		new_filter.operationName = selected;
		new_filter.source = instance.filter.source;
		new_filter.arguments.addAll(instance.filter.arguments.clone()); 
		instance.filter = new_filter;	
	}
}