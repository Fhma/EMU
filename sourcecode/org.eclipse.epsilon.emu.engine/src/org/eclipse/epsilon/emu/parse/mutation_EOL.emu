// 1.0: neglete the state of condtion
// 1.1: neglete all expressions and add not operator 
mutate condition
instance:IfStatement guard: not instance.condition.isTypeOf(NotOperatorExpression) 
byReplace {
	var new_op = NotOperatorExpression.createInstance();
	new_op.expression = instance.condition;
	new_op.expression.inBrackets = true;
	instance.condition = new_op;
}

// 1.2: neglete all not expression and remove not operator
mutate condition
instance:IfStatement  guard: instance.condition.isTypeOf(NotOperatorExpression) 
byReplace {
	instance.condition = instance.condition.expression;
}

// 3.3: replacing < with others
// 3.3.1: replacing with >
mutate condition
instance:IfStatement guard: instance.condition.isTypeOf(LessThanOperatorExpression)
byReplace {
	var new_op = GreaterThanOperatorExpression.createInstance();
	new_op.lhs = instance.condition.lhs;
	new_op.rhs = instance.condition.rhs;	
	instance.condition = new_op;
}

// 3.3.2: replacing with >=
mutate condition
instance:IfStatement guard: instance.condition.isTypeOf(LessThanOperatorExpression)
byReplace {
	var new_op = GreaterThanOrEqualToOperatorExpression.createInstance();
	new_op.lhs = instance.condition.lhs;
	new_op.rhs = instance.condition.rhs;
	instance.condition = new_op;
}

// 3.3.3: replacing with <=
mutate condition
instance:IfStatement guard: instance.condition.isTypeOf(LessThanOperatorExpression)
byReplace {
	var new_op = LessThanOrEqualToOperatorExpression.createInstance();
	new_op.lhs = instance.condition.lhs;
	new_op.rhs = instance.condition.rhs;
	instance.condition = new_op;
}

// 3.3.4: replacing with <>
mutate condition
instance:IfStatement guard: instance.condition.isTypeOf(LessThanOperatorExpression)
byReplace {
	var new_op = NotEqualsOperatorExpression.createInstance();
	new_op.lhs = instance.condition.lhs;
	new_op.rhs = instance.condition.rhs;	
	instance.condition = new_op;
}

// 3.3.5: replacing with =
mutate condition
instance:IfStatement guard: instance.condition.isTypeOf(LessThanOperatorExpression)
byReplace {
	var new_op = EqualsOperatorExpression.createInstance();
	new_op.lhs = instance.condition.lhs;
	new_op.rhs = instance.condition.rhs;	
	instance.condition = new_op;
}